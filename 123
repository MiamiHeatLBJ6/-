#include<reg51.h>  
#define uchar unsigned char
#define uint unsigned int

//数码管位选
sbit S1 =P2^0;
sbit S2 =P2^1;
sbit S3 =P2^2;
sbit S4 =P2^3;
sbit S5 =P2^4;
sbit S6 =P2^5;
//按键引脚
sbit K1 = P3^0;
sbit K2 = P3^1;
sbit K3 = P3^4;
sbit K4 = P3^3;
sbit K5 = P3^2;
sbit K6 = P3^5;
sbit K7 = P3^6;
//蜂鸣器引脚
sbit BUZ= P1^4;
//LED 灯引脚
sbit LED= P1^0;
uchar code table[16]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0x88,0x83,0xc6,0xa1,0x86,0x8e};//共阳数码管编码
uint memory1[10]={0};			//回看时间存储数组			
uint i=0;
uint memory2[10]={0};			//回看时间存储数组（0.01秒位）
int b=0;
uchar r_flag=0;
uint LED_time=0;
uint ALL_Time=0;       //时间
static uchar temp_time=0;

uchar st_flag=0;
void delay(uint i)//1ms延时		
{
  uint x,j;//定义两个无符号字符型变量
  for(j=0;j<i;j++)//循环j=0,只要j<i，j就加一直到j大于i
    for(x=0;x<=145;x++);//循环x=0,只x<=0，x就减一直到x大于148
}

//刷新数码管
void Dispaly(uint num)
{
  static uchar t=0;
  P0=0xff;   //关闭显示
  switch(t)
  {
  case 0:
    S1=1;S2=0;S3=0;S4=0;S5=0;S6=0;
    P0=table[num%600000/100000];
    t++;
    break;
  case 1:
    S1=0;S2=1;S3=0;S4=0;S5=0;S6=0;
    P0=table[num/6000]&0X7F;
    t++;
    break;
  case 2:
    S1=0;S2=0;S3=1;S4=0;S5=0;S6=0;
		P0=table[num%6000/1000];
    t++;
		break;
	case 3:
		S1=0;S2=0;S3=0;S4=1;S5=0;S6=0;
		P0=table[num%1000/100]&0X7F;
		t++;
    break;
	case 4:
		S1=0;S2=0;S3=0;S4=0;S5=1;S6=0;
		P0=table[num%100/10];
		t++;
    break;
	case 5:
		S1=0;S2=0;S3=0;S4=0;S5=0;S6=1;
		P0=table[temp_time];
		t=0;
    break;
  }
}
//*********************************
//按键扫描程序
//*********************************
uchar Read_key()
{	 
  static uchar key_up=1;//按键按松开标志 
  if(key_up&&(K1==0||K2==0||K3==0||K4==0||K5==0||K6==0))
  {
    delay(5);//去抖动     
    key_up=0;
    if(K1==0)return 1;
    else if(K2==0)return 2;
    else if(K3==0)return 5;
    else if(K4==0)return 4;
		else if(K5==0)return 3;
		else if(K6==0)return 6;
  }else if(K1==1&&K2==1&&K3==1&&K4==1&&K5==1&&K6==1)key_up=1; 	    
  return 0;// 无按键按下
}
//定时器初始化
void Init_Time()
{
  //初始化定时器10ms
  TMOD=0X01;		//选中定时器0
  TH0=(65536-10000)/256;
  TL0=(65536-10000)%256;
  EA=1;			//中断总控制位
  ET0=1;		//中断溢出允许位
  TR0=1;		//定时器0启动位
}
void Init_IN0()
{
	IT0=1;
	EX0=1;
}
//存储时间
void fun(uint num)
{
	memory1[b]=num;
	memory2[b]=temp_time;
	b++;
}
void show()
{
  static uchar t=0;
		switch(t)
		{
		case 0:
			S1=1;S2=0;S3=0;S4=0;S5=0;S6=0;
			P0=table[memory1[b]%600000/100000];
			t++;
			break;
		case 1:
			S1=0;S2=1;S3=0;S4=0;S5=0;S6=0;
			P0=table[memory1[b]/6000]&0X7F;
			t++;
			break;
		case 2:
			S1=0;S2=0;S3=1;S4=0;S5=0;S6=0;
			P0=table[memory1[b]%6000/1000];
			t++;
			break;
		case 3:
			S1=0;S2=0;S3=0;S4=1;S5=0;S6=0;
			P0=table[memory1[b]%1000/100]&0X7F;
			t++;
			break;
		case 4:
			S1=0;S2=0;S3=0;S4=0;S5=1;S6=0;
			P0=table[memory1[b]%100/10];
			t++;
			break;
		case 5:
			S1=0;S2=0;S3=0;S4=0;S5=0;S6=1;
			P0=table[memory2[b]];
			t=0;
			break;
		}
}
void clear()
{
		BUZ=1;
		delay(1000);
		b=0;
		for(i=0;i<10;i++)
		{
			memory1[i]=0;
			memory2[i]=0;
		}
}
/*主函数*/						  
void main(void)
{
  uchar key_num=0;
  Init_Time(); //初始化定时器
	Init_IN0();//初始化外部中断0
  while(1)
  {
		K7=0;
		BUZ=0;
    key_num=Read_key();
    if(key_num==1)//清零
    {
			BUZ=1;
			delay(100);
			ALL_Time=0; //清除时间
		  st_flag=0;//清除开始标志
      TR0=1;//打开定时器
    }
    else if(key_num==2)//开始
    {
			BUZ=1;
			delay(100);
      st_flag=1;//开始标志
    }
    else if(key_num==5)//暂停
    {
			BUZ=1;
			delay(100);
      TR0=0;//关闭定时器
    }
    else if(key_num==4)//继续
    {
			BUZ=1;
			delay(100);
      TR0=1;//打开定时器
    }
    else if(key_num==3)//计次
    {
    }
		else if(key_num==6)//回看
		{
			BUZ=1;
			delay(100);
			b--;
			while(1)
			{
				BUZ=0;
				key_num=Read_key();
				if(key_num==1)
				{
					BUZ=1;
					delay(100);
					ALL_Time=0; //清除时间
		      st_flag=0;//清除开始标志
					TR0=1;//打开定时器
					break;
				}
				else if(key_num==6)
				{
					BUZ=1;
					delay(100);
					b--;
					if(b<0)
						break;
				}	
				show();
				delay(8);		
			}
			clear();
		}
		Dispaly(ALL_Time);//显示时间
    delay(8);  //延时
  }
}

//定时中断子程序
void time0(void) interrupt 1 using 1  
{
  TH0=(65536-10000)/256;//10MS
  TL0=(65536-10000)%256;
  if(st_flag==1)//开始了才计时
  {
		if(++temp_time>=10)//0.1s
    {
      temp_time=0;
		}
		if(++LED_time>=100)
		{
			LED_time=0;
			LED=~LED;
		}
		ALL_Time++;
  }
  else
  {
    temp_time=0;
  }
}

//外部中断0子程序
void fun_IN0() interrupt 0
{
	BUZ=1;
	delay(100);
	memory1[b]=ALL_Time;
	memory2[b]=temp_time;
	b++;
}


